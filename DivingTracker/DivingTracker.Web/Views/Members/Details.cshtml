@using DivingTracker.ServiceLayer.Enums
@model DivingTracker.Web.Models.UserQualificationsModel

@{
    ViewBag.Title = ViewBag.SiteName + ": Member Details - " + Model.User.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <h1>@Model.User.Name</h1>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="col-md-12 headed-collection card light-background">
            <div class="row">
                <div class="col-md-12 card-header">
                    @if (ViewBag.CurrentUser.SystemRole.SystemRoleId > (int)SystemRoles.Student)
                    {
                        <a href="@Url.Action("Edit", "Members", new {id = Model.User.UserId})" class="btn btn-default enrol">Edit</a>
                    }
                    <h2>Member Details</h2>
                </div>
                <div class="col-md-12 headed-item">
                    <div class="row">
                        <div class="col-md-4">
                            <p>
                                <strong>@Html.DisplayNameFor(model => model.User.Role)</strong>
                            </p>
                        </div>
                        <div class="col-md-8">
                            <p>@Html.DisplayFor(model => model.User.Role)</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <p>
                                <strong>@Html.DisplayNameFor(model => model.User.EmailAddress)</strong>
                            </p>
                        </div>
                        <div class="col-md-8">
                            <p>
                                @Html.DisplayFor(model => model.User.EmailAddress)
                            </p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <p>
                                <strong>@Html.DisplayNameFor(model => model.User.DateOfBirth)</strong>
                            </p>
                        </div>
                        <div class="col-md-8">
                            <p>
                                @Html.DisplayFor(model => model.User.DateOfBirth)
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="col-md-12 headed-collection card light-background">
            <div class="row">
                <div class="col-md-12 card-header">
                    <h2>Qualifications</h2>
                </div>
                <div class="col-md-12 headed-item">
                    @if (!Model.QualificationsCompleted.Any())
                    {
                        <p>No qualifications (yet!)</p>
                    }
                    else
                    {
                        foreach (var qualification in Model.QualificationsCompleted)
                        {
                            <div class="row">
                                <div class="col-2">
                                    <p class="@qualification.GlyphClass fa-2x"></p>
                                </div>
                                <div class="col-10">
                                    <p>@qualification.Name
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="col-md-12 headed-collection card light-background">
            <div class="row">
                <div class="col-md-12 card-header">
                    @if (ViewBag.CurrentUser.SystemRole.SystemRoleId > (int)SystemRoles.Student)
                    {
                        <a href="@Url.Action("Enrol", "Training", new {id = Model.User.UserId})" class="btn btn-default enrol">Enrol</a>
                    }
                    <h2>Training</h2>
                </div>
                <div class="col-md-12 headed-item">
                    @if (Model.QualificationsInProgress.Select(x => x.Modules).Any())
                    {
                        foreach (var qualification in Model.QualificationsInProgress)
                        {
                            <div class="row">
                                <div class="col-md-12">
                                    <h3>@qualification.Name</h3>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <h4>Modules Complete</h4>
                                            @if (!qualification.Modules.Any(x => x.Completeness >= 1))
                                            {
                                                <p>No modules completed so far</p>
                                            }
                                            else
                                            {
                                                foreach (var module in qualification.Modules.Where(x => x.Completeness >= 1))
                                                {
                                                    <p>@module.Name: @module.Description</p>
                                                }
                                            }
                                        </div>
                                        <div class="col-md-9">
                                            <h4>Modules Remaining <span class="toggle-detail small">(Click here to show/hide more detail)</span></h4>
                                            @foreach (var module in qualification.Modules.Where(x => x.Completeness < 1))
                                            {
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <p>@module.Name: @module.Description</p>
                                                        <h5 class="collapsible">@string.Join("; ", module.ModuleSections.Select(x => x.Name))</h5>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-md-12">
                                @{
                                    var prefix = Model.User.UserId == ViewBag.CurrentUserId
                                        ? "You are"
                                        : Model.User.FirstName + " is";
                                }
                                <p>@prefix not currently working towards any qualifications.</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <p>
            @if (ViewBag.CurrentUser.SystemRoleId > (int)SystemRoles.Student)
            {
                @Html.ActionLink("Edit", "Edit", new {id = Model.User.UserId}, new {@class = "btn btn-primary"})
                <text>&nbsp;</text>
                @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-primary"})
            }
        </p>
    </div>
</div>

@section Scripts
{
    <script language="javascript">
        $(document).ready(function() {
            $(".toggle-detail").click(function () {
                debugger;
                $(this).parent().siblings().find('.collapsible').slideToggle();
            });
        });
    </script>
}